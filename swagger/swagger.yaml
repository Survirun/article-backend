openapi: 3.0.0
info:
  version: 0.0.1
  title: Survirun REST API docs
  description: Survirun의 웹과 앱을 위한 REST API 문서입니다
  license:
    name: Hyunju Yang
servers:
  - url: 'http://localhost:3000/api/'
components:
  securitySchemas:
    UIDAuth:
      type: apiKey
      in: header
      name: authorization
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          description: 유저의 이메일
        height:
          type: number
          nullable: true
          description: 유저의 키
        weight:
          type: number
          nullable: true
          description: 유저의 몸무게
        age:
          type: number
          nullable: true
          description: 유저의 나이
        proficiency:
          type: number
          nullable: true
          description: 유저의 숙련도
        name:
          type: string
          description: 유저의 이름
    Exercise:
      type: object
      properties:
        uid:
          type: string
          description: 파이어베이스를 통해 로그인한 유저의 고유 ID
        time:
          type: number
          description: 유저가 운동을 진행한 시간(초)
        finishedTime:
          type: number
          description: 유저가 운동을 끝낸 시각(unix timestamp)
        distance:
          type: number
          description: 유저의 움직인 거리
        calorie:
          type: number
          description: 유저가 소모한 칼로리
        speed:
          type: number
          description: 유저의 평균 분속 km/min
        img:
          type: string
          description: 유저의 이동한 경로에 대한 이미지 리소스
    ExerciseRequest:
      type: object
      properties:
        time:
          type: number
          description: 유저가 운동을 진행한 시간(초)
        distance:
          type: number
          description: 유저의 움직인 거리
        calorie:
          type: number
          description: 유저가 소모한 칼로리
        speed:
          type: number
          description: 유저의 평균 분속 km/min
        img:
          type: string
          description: 유저의 이동한 경로에 대한 이미지 리소스
paths:
  '/user/exist/{uid}':
    get:
      tags:
        - User
      summary: 유저 고유 ID 존재 여부 조회
      consumes:
        - application/json
      parameters:
        - in: path
          name: uid
          schema:
            type: string
          required: true
          description: User Own ID
      responses:
        '200':
          description: 유저 존재
        '404':
          description: 유저 없음
        '500':
          $ref: '#/paths/~1user~1my/get/responses/500'
  /user/new:
    post:
      tags:
        - User
      summary: 유저 생성
      consumes:
        - application/json
      requestBody:
        x-name: body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uid:
                  type: string
                  description: 유저 고유 ID
                email:
                  type: string
                  description: 유저의 이메일
                name:
                  type: string
                  description: 유저의 이름
      responses:
        '201':
          $ref: '#/paths/~1user~1my/patch/responses/200'
        '400':
          $ref: '#/paths/~1user~1my/get/responses/400'
        '500':
          $ref: '#/paths/~1user~1my/get/responses/500'
  /user/my:
    get:
      tags:
        - User
      summary: 나의 정보 가져오기
      consumes:
        - application/json
      security:
        - UIDAuth: []
      parameters:
        - name: uid
          in: header
          type: string
          required: true
          description: User ID
      responses:
        '200':
          description: 유저의 기본 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                example:
                  error: errorMessage
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                example:
                  error: errorMessage
    patch:
      tags:
        - User
      summary: 나의 정보 수정하기
      consumes:
        - application/json
      security:
        - UIDAuth: []
      parameters:
        - name: uid
          in: header
          type: string
          required: true
          description: User ID
      requestBody:
        x-name: body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                height:
                  type: number
                  nullable: true
                  description: 유저의 키
                weight:
                  type: number
                  nullable: true
                  description: 유저의 몸무게
                age:
                  type: number
                  nullable: true
                  description: 유저의 나이
                proficiency:
                  type: number
                  nullable: true
                  description: 유저의 숙련도
      responses:
        '200':
          description: successful response with no data
        '400':
          $ref: '#/paths/~1user~1my/get/responses/400'
        '500':
          $ref: '#/paths/~1user~1my/get/responses/500'
  /user/my/proficiency:
    patch:
      tags:
        - User
      summary: 유저 운동 숙련도 증감
      consumes:
        - application/json
      security:
        - UIDAuth: []
      parameters:
        - name: uid
          in: header
          type: string
          required: true
          description: User ID
        - name: amount
          in: query
          type: number
          required: true
          description: 증감량
      responses:
        '200':
          $ref: '#/paths/~1user~1my/patch/responses/200'
        '400':
          $ref: '#/paths/~1user~1my/get/responses/400'
        '500':
          $ref: '#/paths/~1user~1my/get/responses/500'
  /exercise/log:
    get:
      tags:
        - Exercise
      summary: 시작날짜와 끝날짜 사이의 모든 운동기록 불러오기
      consumes:
        - application/json
      parameters:
        - in: header
          name: uid
          schema:
            type: string
          required: true
          description: User Own ID
        - in: query
          name: start
          schema:
            type: string
          required: true
          description: 'start date, YYYY-MM-DD'
        - in: query
          name: end
          schema:
            type: string
          required: true
          description: 'end date, YYYY-MM-DD'
      responses:
        '200':
          description: 운동 기록 목록
          content:
            application/json:
              schema:
                type: object
                properties:
                  exerciseLog:
                    type: array
                    items:
                      type: object
                      properties:
                        time:
                          type: number
                          description: 유저가 운동을 진행한 시간(초)
                        finishedTime:
                          type: number
                          description: 유저가 운동을 끝낸 시각(unix timestamp)
                        distance:
                          type: number
                          description: 유저의 움직인 거리
                        calorie:
                          type: number
                          description: 유저가 소모한 칼로리
                        speed:
                          type: number
                          description: 유저의 평균 분속 km/min
                        img:
                          type: string
                          description: 유저의 이동한 경로에 대한 이미지 리소스
        '400':
          $ref: '#/paths/~1user~1my/get/responses/400'
        '500':
          $ref: '#/paths/~1user~1my/get/responses/500'
    post:
      tags:
        - Exercise
      summary: 오늘의 운동 추가
      consumes:
        - application/json
      parameters:
        - in: header
          name: uid
          schema:
            type: string
          required: true
          description: User Own ID
      requestBody:
        x-name: body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseRequest'
      responses:
        '201':
          $ref: '#/paths/~1user~1my/patch/responses/200'
        '400':
          $ref: '#/paths/~1user~1my/get/responses/400'
        '500':
          $ref: '#/paths/~1user~1my/get/responses/500'
